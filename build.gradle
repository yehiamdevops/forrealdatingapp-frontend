plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'edu.sc.seis.launch4j' version '3.0.6'

}

repositories {
    mavenCentral()
}
javafx {
    version = "23.0.2"
    modules = [ 'javafx.base','javafx.controls', 'javafx.graphics','javafx.swing' ]
}
mainClassName = 'hellofx.App'

jar {
    manifest {
        attributes 'Main-Class': 'hellofx.Launcher'
    }
    duplicatesStrategy = 'exclude'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
 
    }
}
def launch4jOutputDir = "${buildDir}/launch4j"

launch4j {
    outfile = 'forrealdatingapp.exe'
    // jarTask instead of jar (points to your JAR-producing task)
    jarTask = project.tasks.jar
    bundledJrePath = 'jre'
    // Only needed if using custom dependencies
    dontWrapJar = true 
    outputDir = launch4jOutputDir
}
tasks.register('zipLaunch4j', Zip) {
    dependsOn 'createExe'
    archiveFileName = "forrealdatingapp.zip" // Custom name with version
    destinationDirectory = file("${buildDir}/distributions")

    from(launch4jOutputDir) {
        include '**/*'
    }

    doLast {
        println "Created zip archive at ${archiveFile.get()}"
    }
}

dependencies {
    /* uncomment for cross-platform jar: */
//    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:win"
//    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:linux"
//    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:mac"
implementation 'com.adobe.xmp:xmpcore:6.1.11'
implementation 'com.drewnoakes:metadata-extractor:2.19.0'
implementation 'io.github.cdimascio:dotenv-java:3.2.0'
implementation 'com.fasterxml.jackson.core:jackson-annotations:2.18.3'
implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.3'
implementation 'com.fasterxml.jackson.core:jackson-core:2.18.3'
implementation 'com.cloudinary:cloudinary-http5:2.2.0'
implementation 'com.cloudinary:cloudinary-core:2.2.0'
}

